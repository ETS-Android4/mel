import java.time.LocalDateTime

apply plugin: 'java'
//apply plugin: 'gradle-one-jar'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}
compileTestJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}
repositories {
    mavenCentral()
}

version = 1.0

ext {
    buildDate = LocalDateTime.now().toString()
    variant = "fx"
}

dependencies {
    compile project(':konsole')
    compile project(path: ':drivefx')
    compile project(path: ':contactsfx')
    testCompile project(path: ':drive', configuration: 'driveTestOutput')
    testCompile 'junit:junit:4.12'
}



task createProperties(dependsOn: processResources) {
    doLast {
        Properties p = new Properties()
        p['builddate'] = project.buildDate
        p['variant'] = project.variant
        //store in jar
        new File("$buildDir/resources/main/version.properties").withWriter { w -> p.store(w, null) }
        // store in build directory
        new File("$buildDir/version.properties").withWriter { w -> p.store(w, null) }
    }
}

//build{
//    dependsOn createProperties
//}

classes {
    dependsOn createProperties
}

task bundledJar(type: Jar) {
    group "meins"
    description "build a fucking jar filled with candies!"
    manifest {
        attributes "version": 1, "Main-Class": "de.mein.fxbundle.Main"
    }
    dependsOn jar

    baseName = project.name// + '-all'
    List paths = configurations.compile.collect { entry ->
        println(entry.getAbsolutePath())
        if (entry.isDirectory())
            entry
        else
            zipTree(entry)
    }
    from(paths) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
    with jar
    doLast {
        //write the version file in the output dir as well
        File jarFile = new File(jar.outputs.files.getAsPath());
        File versionTxt = new File("$buildDir/version.properties")
        File target = new File("$buildDir"+File.separator+"libs"+File.separator+jarFile.getName()+".properties")
        String version = versionTxt.getText('UTF-8')
        target.text = version
        println("printing version to: " + target.getAbsolutePath())
    }
}