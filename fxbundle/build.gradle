import java.time.LocalDateTime

plugins {
    id 'org.springframework.boot'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

javafx {
    version = project.javaFxVersion
    modules = project.javaFxModules
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDir "${project(':filedumpfx').projectDir}/src/main/resources"
            srcDir "${project(':filesyncfx').projectDir}/src/main/resources"
            srcDir "${project(':filesync').projectDir}/src/main/resources"
            srcDir "${project(':contactsfx').projectDir}/src/main/resources"
            srcDir "${project(':contacts').projectDir}/src/main/resources"
            srcDir "${project(':authfx').projectDir}/src/main/resources"
            srcDir "${project(':auth').projectDir}/src/main/resources"
        }
    }
}

version = 1.0

ext {
    buildVersion = new Date().getTime().toString()
    buildVariant = "fx"
}

dependencies {
    implementation project(':filedumpfx')
    implementation project(':filesyncfx')
    implementation project(':contactsfx')
    testImplementation project(configuration: 'driveTestOutput', path: ':filesync')
    testImplementation 'junit:junit:4.12'
}
compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

// the next parts build a single jar
def props = new Properties()
ext {
    buildVariant = "fx"
    jarName = "${project.name}-${version}-${buildVariant}.jar"
}
task createProperties() {
    doLast {
        println "createProperties($buildDir)"
        props['timestamp'] = new Date().getTime().toString()
        props['commit'] = "${COMMIT}".toString()
        props['variant'] = buildVariant
        //store in jar
        File resources = new File(buildDir, "resources")
        File main = new File(resources, "main")
        main.mkdirs()
        new File(main, "version.properties").withWriter { w -> props.store(w, null) }
        File libs = new File(buildDir, "libs")
        libs.mkdirs()
        new File(libs, "${jarName}.properties").withWriter { w -> props.store(w, null) }
    }
}
bootJar {
    mainClassName = 'de.mel.fxbundle.Main'
    archiveFileName = jarName
}
processResources.dependsOn(createProperties)
// buildJarstuff ends here