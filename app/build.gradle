apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'me.tatarka.retrolambda'

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
//        maven {
//            url "https://maven.google.com"
//        }
    }
}



buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
//        classpath 'me.tatarka:gradle-retrolambda:3.7.0'
        // NOTE: Do not place your a
        // pplication dependencies here; they belong
        // in the individual module build.gradle files
    }
}

android {
    compileOptions.encoding = 'UTF-8'
    compileSdkVersion 28
    buildToolsVersion '28.0.2'
    defaultConfig {
        applicationId "de.mein.meindrive"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "0.1-beta"
        multiDexEnabled false
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [ eventBusIndex : 'com.example.myapp.MyEventBusIndex' ]
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
//        compileOptions.encoding = 'UTF-8'
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

task copyFiles(type: Copy) {
    def f = rootProject.file('auth/src/main/resources')
    def f2 = rootProject.file('drive/src/main/resources')
    def f3 = rootProject.file('contacts/src/main/resources')
    def t = rootProject.file('app/src/main/assets')
    from(f)
    from(f2)
    from(f3)
    into(t)
    include('*.sql')
    logger.error(f.getAbsolutePath())
    logger.error(t.getAbsolutePath())
}

preBuild.dependsOn(copyFiles)

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'androidx.multidex:multidex:2.0.0'
//    implementation project(':json')
//    implementation project(':serialize')
//    implementation project(':sql')
//    implementation project(':auth')
//    implementation project(':drive')
//    testImplementation project(':drive')
//    implementation project(':contacts')
//    implementation 'androidx.appcompat:appcompat:1.0.0'
//    implementation 'com.google.android.material:material:1.0.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.gridlayout:gridlayout:1.0.0'
//    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
//    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
//    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
//    testImplementation 'junit:junit:4.12'

    implementation 'com.android.support:multidex:1.0.3'
    implementation project(':json')
    implementation project(':serialize')
    implementation project(':sql')
    implementation project(':auth')
    implementation project(':drive')
    testImplementation project(':drive')
    implementation project(':contacts')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:gridlayout-v7:28.0.0'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'junit:junit:4.12'
}

repositories {
    mavenCentral()
    google()
}
