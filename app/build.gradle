apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'me.tatarka.retrolambda'

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
        maven { url 'http://guardian.github.com/maven/repo-releases' }

    }
}



buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        //classpath 'me.tatarka:gradle-retrolambda:3.2.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

android {
    compileOptions.encoding = 'UTF-8'
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "de.mein.meindrive"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "0.1-beta"
        multiDexEnabled false
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [ eventBusIndex : 'com.example.myapp.MyEventBusIndex' ]
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
//        compileOptions.encoding = 'UTF-8'
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

task copyFiles(type: Copy) {
    def f = rootProject.file('auth/src/main/resources')
    def f2 = rootProject.file('drive/src/main/resources')
    def f3 = rootProject.file('contacts/src/main/resources')
    def t = rootProject.file('app/src/main/assets')
    from(f)
    from(f2)
    from(f3)
    into(t)
    include('*.sql')
    logger.error(f.getAbsolutePath())
    logger.error(t.getAbsolutePath())
}

preBuild.dependsOn(copyFiles)

dependencies {
//    compile 'org.greenrobot:eventbus:3.0.0'
//    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.0.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':json')
    implementation project(':serialize')
    implementation project(':sql')
    implementation project(':auth')
    implementation project(':drive')
    testImplementation project(':drive')
    implementation project(':contacts')
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.gu:option:1.3'
//    compile 'net.rdrei.android.dirchooser:library:1.0-pre-v11@aar'
    implementation 'net.rdrei.android.dirchooser:library:3.2@aar'

    //    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //compile 'com.android.support:multidex:0.0.+'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
//    compile 'com.annimon:stream:1.1.6'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'

//    //stream support
//    compile 'net.sourceforge.streamsupport:streamsupport:1.5.5'
//    compile 'net.sourceforge.streamsupport:streamsupport-cfuture:1.5.5'
//    compile 'net.sourceforge.streamsupport:streamsupport-atomic:1.5.5'
//    compile 'net.sourceforge.streamsupport:streamsupport-flow:1.5.5'
//    compile 'net.sourceforge.streamsupport:streamsupport-literal:1.5.5'
}

repositories {
    mavenCentral()
    google()
}
